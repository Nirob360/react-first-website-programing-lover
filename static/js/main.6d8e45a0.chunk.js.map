{"version":3,"sources":["components/from/styled/FromStyled.js","components/from/Forms.js","GlobalStyle.js","App.js","reportWebVitals.js","index.js"],"names":["FormContainer","styled","div","RegisterForm","form","FormField","input","ValidText","span","SubmitButton","button","Indicator","Forms","useState","firstName","lastName","email","values","setValue","submited","setSubmited","valid","setValid","onSubmit","e","preventDefault","type","name","placeholder","value","onChange","event","target","GlobalStyle","createGlobalStyle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAEaA,EAAgBC,IAAOC,IAAV,8KASbC,EAAeF,IAAOG,KAAV,0UAWZC,EAAYJ,IAAOK,MAAV,iLASTC,EAAYN,IAAOO,KAAV,6CAGTC,EAAeR,IAAOS,OAAV,0MAUZC,EAAYV,IAAOC,IAAV,8O,OCjCP,SAASU,IACpB,MAA0BC,mBAAS,CAC/BC,UAAW,GACXC,SAAU,GACVC,MAAO,KAHX,mBAAOC,EAAP,KAAcC,EAAd,KAMA,EAAgCL,oBAAS,GAAzC,mBAAQM,EAAR,KAAkBC,EAAlB,KACA,EAAyBP,oBAAS,GAAlC,mBAAOQ,EAAP,KAAaC,EAAb,KAuBA,OACI,mCACI,cAACtB,EAAD,UACI,eAACG,EAAD,CAAcoB,SAZT,SAACC,GAClBA,EAAEC,iBACCR,EAAOH,WAAaG,EAAOF,UAAYE,EAAOD,OAC7CM,GAAS,GAEbF,GAAY,IAOA,UACI,cAACf,EAAD,CAAWqB,KAAK,OAAOC,KAAK,YAAYC,YAAY,aAAaC,MAAOZ,EAAOH,UAAWgB,SAzB1E,SAACC,GAChCb,EAAS,2BAAID,GAAL,IAAaH,UAAUiB,EAAMC,OAAOH,YAyB5BV,IAAaF,EAAOH,UAAW,cAACP,EAAD,yCAAkD,KAClF,cAACF,EAAD,CAAWqB,KAAK,OAAOC,KAAK,WAAWC,YAAY,YAAYC,MAAOZ,EAAOF,SAAWe,SAvBzE,SAACC,GAChCb,EAAS,2BAAID,GAAL,IAAaF,SAASgB,EAAMC,OAAOH,YAuB3BV,IAAaF,EAAOF,SAAY,cAACR,EAAD,wCAAiD,KACjF,cAACF,EAAD,CAAWqB,KAAK,QAAOC,KAAK,QAAQC,YAAY,QAAQC,MAAOZ,EAAOD,MAAOc,SArBlE,SAACC,GAC5Bb,EAAS,2BAAID,GAAL,IAAaD,MAAMe,EAAMC,OAAOH,YAqBvBV,IAAaF,EAAOD,MAAQ,cAACT,EAAD,uCAAgD,KAC7E,cAACE,EAAD,CAAciB,KAAK,SAAnB,sBACCP,GAAYE,EAAQ,cAACV,EAAD,2BAAsC,YCnD/E,IAQesB,EARKC,YAAH,sHCUFC,MATf,WACI,OACI,qCACI,cAAC,EAAD,IACA,cAACvB,EAAD,QCKGwB,EAZS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFpBQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5Bb,M","file":"static/js/main.6d8e45a0.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const FormContainer = styled.div`\r\n    width: 100%;\r\n    height: 100vh;\r\n    background-color: #027536;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const RegisterForm = styled.form`\r\n    width: 350px;\r\n    transition: all 0.3s;\r\n    background-color: #fff;\r\n    padding: 10px;\r\n    box-shadow: -1px 1px 21px 4px rgba(0, 0, 0, 0.75);\r\n    -webkit-box-shadow: -1px 1px 21px 4px rgba(0, 0, 0, 0.75);\r\n    -moz-box-shadow: -1px 1px 21px 4px rgba(0, 0, 0, 0.75);\r\n    border-radius: 10px;\r\n`;\r\n\r\nexport const FormField = styled.input`\r\n    width: 100%;\r\n    padding: 10px;\r\n    outline: none;\r\n    height: 45px;\r\n    border: none;\r\n    background-color: #ede8e8;\r\n    margin: 15px 0;\r\n`;\r\nexport const ValidText = styled.span`\r\n    color: red;\r\n`;\r\nexport const SubmitButton = styled.button`\r\n    width: 100%;\r\n    padding: 10px;\r\n    border: none;\r\n    background-color: #027536;\r\n    color: #fff;\r\n    font-size: 20px;\r\n    cursor: pointer;\r\n    margin-top: 10px;\r\n`;\r\nexport const Indicator = styled.div`\r\n    width: 100%;\r\n    height: 45px;\r\n    background-color: #027536;\r\n    color: #fff;\r\n\r\n    font-size: 22px;\r\n    margin-top: 15px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n","/* eslint-disable prettier/prettier */\nimport React, { useState } from 'react';\nimport {\n    FormContainer,\n    FormField,\n    Indicator,\n    RegisterForm,\n    SubmitButton,\n    ValidText\n} from './styled/FromStyled';\n\nexport default function Forms() {\n    const [values,setValue] = useState({\n        firstName: '',\n        lastName: '',\n        email: \"\"\n    })\n\n    const [ submited, setSubmited] =useState(false);\n    const [valid,setValid] = useState(false);\n\n const handleFirstNameInputChange = (event)=> {\n     setValue({...values, firstName:event.target.value})\n }\n\n const handleLastNameInputChange = (event)=> {\n    setValue({...values, lastName:event.target.value})\n}\n\nconst handleEmailInputChange = (event)=> {\n    setValue({...values, email:event.target.value})\n}\n\nconst handelSubmit = (e) => {\n    e.preventDefault();\n    if(values.firstName && values.lastName && values.email ){\n        setValid(true)\n    }\n    setSubmited(true);\n}\n\n\n    return (        \n        <>\n            <FormContainer>\n                <RegisterForm onSubmit={handelSubmit}>\n                    <FormField type=\"text\" name=\"firstName\" placeholder=\"Frist Name\" value={values.firstName} onChange={handleFirstNameInputChange} />\n                    {submited && !values.firstName? <ValidText> Please enter a first name</ValidText>:null}\n                    <FormField type=\"text\" name=\"lastName\" placeholder=\"Last Name\" value={values.lastName}  onChange={handleLastNameInputChange}/>\n                   {submited && !values.lastName ?  <ValidText> Please enter a last name</ValidText>:null}\n                    <FormField type=\"email\"name=\"Email\" placeholder=\"Email\" value={values.email} onChange={handleEmailInputChange} />\n                    {submited && !values.email?  <ValidText> Please enter your email</ValidText>:null}\n                    <SubmitButton type=\"submit\">Register</SubmitButton>\n                    {submited && valid ? <Indicator>send sucesss</Indicator> : null}                    \n                </RegisterForm>\n                \n            </FormContainer>            \n        </>\n    );\n}\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    * {\r\n        margin: 0;\r\n        padding: 0;\r\n        box-sizing: border-box;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import Forms from './components/from/Forms';\nimport GlobalStyle from './GlobalStyle';\n\nfunction App() {\n    return (\n        <>\n            <GlobalStyle />\n            <Forms />\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}